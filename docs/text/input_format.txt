Input File Format
*****************

simple_tide_report is designed for performning lookups on ‘bulk’ sets
of data. Tests can be performed against any of the three IOC types
that are recognised by TIDE. i.e. hosts, IPs and URLs.

The file format used by simple_tide_report is therefore simply a one
query per line where each line contains either a hostname, IP address
or URL. Files can contain data of a single data type or multiple data
types as the script automatically determines the data type and uses
this for the TIDE query.


Example Input File
==================

A simple mixed data type input file is shown below:

   www.google.com
   eicar.co
   http://t7rminal.space/
   1.1.1.1
   info.spiritsoft.cn

Important: If the customer provides or is using URL data for testing
  purposes it is important to note that currently these will only
  perform a type URL query against TIDE. This means that you may
  potentially miss threat intel data. It is therefore advised to
  extract the host component from the URLs and use this as input to
  the script. For tips on how to do this please see section on
  Extracting Host Info from URLs (Please also see the TODO below.)

Todo: Add script option to take URLs and extract the ‘host’ (hostname
or IP) and process as the appropriate data type.


Potential Sources of Input Data
===============================

Although the customer may already have lists of domains, urls and IPs
that they wish to use for testing purposes, it may be that some
processing of this data is required before you parsing with the
script. You may also find yourself in the position that you are
performing a PoC where existing network traffic is used to provide
test data. This may be in the form of packet captures or logfiles.

Below are some examples that can help build an input file for the PoC
from alternate sources.


Extracting Host Info from URLs
==============================

The simplest form is taking a list of URLs:

   http://www.google.com/
   http://scevanchurch.org/cor.scin/sc.php
   http://geeflyco.com//paper.files/imagespaper/login.php
   http://kareniot.com/cor.scin/sc.php
   http://mindnetig.com/cor.scin/sc.php
   http://www.dhal3.com/images/nab/cardinfo.htm
   http://bogushost.net:8080/content/index.html

There are several simple ways to extract the host information, ranging
from importing in to Excel and splitting the data based on forward
slashes. However, it is also simple to do this assuming that they are
in a simple text file on the command line.

In its simplest form with a simple list as above you can use the cut
command:

   cut -d\/ -f3 urllist.txt > host_extract.txt

However, if the URLs contain port numbers, as with the above example,
you may would need to perform an additional cut using -d: -f1 to
remove these. This can easily be achieved with a single command:

   cut -d\/ -f3 urllist.txt | cut -d: -f1 > host_extract.txt


Using Packet Captures to Create Input Files
===========================================

Todo: tshark -r capture.pcap -n -T fields -e dns.qry.name | sort -n |
uniq > hosts.txt


Using DNS Query Logs to Create Input Files
==========================================

Todo: awk ‘{print $9}’ logfile | sort -n | uniq > hosts.txt
